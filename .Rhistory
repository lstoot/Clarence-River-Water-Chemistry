#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
# So let's load the trace element Otolith transect data
setwd("~/GitHub/Otoliths")
trace.TraPet <- read.csv("Input/TraPet.Trace.csv", header = TRUE)
head(trace.TraPet)
#Now lets plot!
# This is all the fish from all the sites
# So let's load the trace element Otolith transect data
setwd("~/GitHub/Otoliths")
trace.TraPet <- read.csv("Input/TraPet.Trace.csv", header = TRUE)
head(trace.TraPet)
#Now lets plot!
# This is all the fish from all the sites
#Sr:Ca
strontium.otolith <- ggplot() + theme_bw() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", title = "Sr:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
strontium.otolith
ggsave("Output/TraPet.strontium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Ba:Ca
barium.otolith <- ggplot() + theme_classic() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", title = "Ba:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
barium.otolith
# ------------------------------------------------- #
#  TRA PET Individual plots by Fish ID and Reach    #
# ------------------------------------------------- #
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.TraPet, Reach == 'Estuary/Tidal')
strontium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.EST + facet_grid(rows = vars(Fish.ID))
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
#Below Gorge
#This picks out just the Below Gorge Ones
BLW<- subset(trace.TraPet, Reach == 'Below Gorge')
strontium.otolith.BLW <- ggplot() + theme_bw() +
geom_line(data = BLW, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.BLW + facet_grid(rows = vars(Fish.ID))
barium.otolith.BLW <- ggplot() + theme_bw() +
geom_line(data = BLW, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.BLW + facet_grid(rows = vars(Fish.ID))
#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
#---------------------------------
###    Tra Pet Trace Elements   ##
#---------------------------------
# So let's load the trace element Otolith transect data
setwd("~/GitHub/Otoliths")
trace.TraPet <- read.csv("Input/TraPet.Trace.csv", header = TRUE)
head(trace.TraPet)
#Now lets plot!
# This is all the fish from all the sites
#Sr:Ca
strontium.otolith <- ggplot() + theme_bw() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", title = "Sr:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
#Ba:Ca
barium.otolith <- ggplot() + theme_classic() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", title = "Ba:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
barium.otolith
ggsave("Output/TraPet.barium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.TraPet, Reach == 'Estuary/Tidal')
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
#---------------------------------
###  Gob Spp. Trace Elements   ##
#---------------------------------
# So let's load the trace element Otolith transect data
setwd("~/GitHub/Otoliths")
trace.Gob <- read.csv("Input/Gobspp.Trace.csv", header = TRUE)
head(trace.Gob)
#Now lets plot!
# This is all the fish from all the sites
#Sr:Ca
strontium.otolith <- ggplot() + theme_bw() +
geom_line(data = trace.Gob, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", title = "Sr:Ca ppm for Gob.spp", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
strontium.otolith
ggsave("Output/Gob.strontium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Ba:Ca
barium.otolith <- ggplot() + theme_classic() +
geom_line(data = trace.Gob, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", title = "Ba:Ca ppm for Gob.spp", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
barium.otolith
ggsave("Output/Gob.barium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#BUT OH MY GOSH - THAT IS SO MESSY ..let's look at individual plots
#Sr:Ca & Ba:Ca by each REACH and Fish.ID
# ------------------------------------------------- #
#  GOB SPP Individual plots by Fish ID and Reach    #
# ------------------------------------------------- #
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.Gob, Reach == 'Estuary/Tidal')
strontium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#---------------------------------
###    Tra Pet Trace Elements   ##
#---------------------------------
# So let's load the trace element Otolith transect data
setwd("~/GitHub/Otoliths")
trace.TraPet <- read.csv("Input/TraPet.Trace.csv", header = TRUE)
head(trace.TraPet)
#Now lets plot!
# This is all the fish from all the sites
#Sr:Ca
strontium.otolith <- ggplot() + theme_bw() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", title = "Sr:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
strontium.otolith
ggsave("Output/TraPet.strontium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Ba:Ca
barium.otolith <- ggplot() + theme_classic() +
geom_line(data = trace.TraPet, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", title = "Ba:Ca ppm for T. petardi", color = "Fish ID") +
theme(axis.text.x = element_blank()) +
theme(legend.text = element_text(size=9)) +
theme(legend.title = element_text(size=9), legend.position = "bottom")
barium.otolith
ggsave("Output/TraPet.barium.otolith.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#BUT OH MY GOSH - THAT IS SO MESSY ..let's look at individual plots
#Sr:Ca & Ba:Ca by each REACH and Fish.ID
# ------------------------------------------------- #
#  TRA PET Individual plots by Fish ID and Reach    #
# ------------------------------------------------- #
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.TraPet, Reach == 'Estuary/Tidal')
strontium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Below Gorge
#This picks out just the Below Gorge Ones
BLW<- subset(trace.TraPet, Reach == 'Below Gorge')
strontium.otolith.BLW <- ggplot() + theme_bw() +
geom_line(data = BLW, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.BLW + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.Below.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.BLW <- ggplot() + theme_bw() +
geom_line(data = BLW, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.BLW + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.BLW.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Mann-Nymboida
#This picks out just the Mann-Nymboida Ones
Mann<- subset(trace.TraPet, Reach == 'Mann-Nymboida')
strontium.otolith.Mann <- ggplot() + theme_bw() +
geom_line(data = Mann, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.Mann + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.Mann.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.Mann <- ggplot() + theme_bw() +
geom_line(data = Mann, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.Mann + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.Mann.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Orara
#This picks out just the Orara Ones
Orara<- subset(trace.TraPet, Reach == 'Orara')
strontium.otolith.Orara <- ggplot() + theme_bw() +
geom_line(data = Orara, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.Orara + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.Orara.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.Orara <- ggplot() + theme_bw() +
geom_line(data = Orara, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.Orara + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.Orara.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Above Gorge
#This picks out just the Above Gorge Ones
AG<- subset(trace.TraPet, Reach == 'Above Gorge')
strontium.otolith.AG <- ggplot() + theme_bw() +
geom_line(data = AG, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.AG + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.AG.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.AG <- ggplot() + theme_bw() +
geom_line(data = AG, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.AG + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.AG.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
setwd("~/GitHub/Otoliths")
biom <- read.csv("Input/biometrics.csv", header = TRUE)
head(biom)
str(biom)
# Average/sd/max/min of length and weight of all fish by species
#Length
aggregate(biom$Length.cm, list(biom$Species), FUN=mean)
aggregate(biom$Length.cm, list(biom$Species), FUN=sd)
aggregate(biom$Length.cm, list(biom$Species), FUN=max)
aggregate(biom$Length.cm, list(biom$Species), FUN=min)
#Weight
aggregate(biom$Weight.g, list(biom$Species), FUN=mean)
aggregate(biom$Weight.g, list(biom$Species), FUN=sd)
aggregate(biom$Weight.g, list(biom$Species), FUN=max)
aggregate(biom$Weight.g, list(biom$Species), FUN=min)
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.Gob, Reach == 'Estuary/Tidal')
strontium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.Gob.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.Gob.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Estuary/Tidal
#This picks out just the Estuary/Tidal Ones
EST<- subset(trace.TraPet, Reach == 'Estuary/Tidal')
strontium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Sr.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Sr:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
strontium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/strontium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
barium.otolith.EST <- ggplot() + theme_bw() +
geom_line(data = EST, aes(x = Distance, y = Ba.Ca, color = factor(Fish.ID)), linewidth = 0.25) +
labs(x = "Distance", y = "Ba:Ca ppm", color = "Fish ID") +
theme(axis.text.x = element_blank())
barium.otolith.EST + facet_grid(rows = vars(Fish.ID))
ggsave("Output/barium.otolith.TraPet.EstuaryTidal.png", device = "png", bg = "transparent",width = 25, height = 17, units = "cm")
#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
library(FSA)
#-------------------------------------------------------------------------#
##                    Let's do some actual stats                         ##
#-------------------------------------------------------------------------#
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
sapply(new_element, class)
i <- c(6:24)
new_element[ , i] <- apply(new_element[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
sapply(new_element, class)
#Let's load in the data
setwd("~/GitHub/Water_Chemistry/")
water <- read.csv("Input/Locations.csv")
head(water)
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
sapply(new_element, class)
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv")
head(new_element)
setwd("~/GitHub/Water_Chemistry/")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
setwd("~/GitHub/Water_Chemistry/")
setwd("~/GitHub/Water Chemistry")
new_element <- read.csv("Input/WaterChem.Results.csv", header = T)
head(new_element)
sapply(new_element, class)
i <- c(6:24)
new_element[ , i] <- apply(new_element[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
sapply(new_element, class)
#sr 87.86
Iso.Sr.8786 <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Sr87.86, fill = Sr87.86), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(5)) +
scale_fill_gradientn(colours = rainbow(5)) +
labs(x = "Longitude", y = "Latitude", fill = "Sr87:86", colour = "Sr87:86") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Sr.8786
ggsave("Output/Isoscape.Sr86.87.png", width = 25, height = 17, units = "cm")
#Let's load in the data
setwd("~/GitHub/Water_Chemistry/")
water <- read.csv("Input/Locations.csv")
head(water)
# Reorder plotting order
water$Zone <- factor(water$Zone, levels = c("Estuary - Lower Clarence", "Orara", "Clarence main stem", "Mann - Nymboida - Boyd", "Northern tributaries"))
# Load catchment shapefile:
catch <- st_read("Input/shapefile/MultiAttributeClarence.shp") # Use sf package (keep projection!)
head(catch)
catch[catch$LandCode == "f5k",]
catchrivers <- catch[catch$LandCode == "f5k",]
class(catchrivers)
catchrivers
catch[catch$LandCode == "f5b",]
lake <- catch[catch$LandCode == "f5b",]
class(lake)
lake
catch[catch$LandCode == "f5a",]
sriv <- catch[catch$LandCode == "f5a",]
class(sriv)
sriv
#sr 87.86
Iso.Sr.8786 <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Sr87.86, fill = Sr87.86), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(5)) +
scale_fill_gradientn(colours = rainbow(5)) +
labs(x = "Longitude", y = "Latitude", fill = "Sr87:86", colour = "Sr87:86") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Sr.8786
ggsave("Output/Isoscape.Sr86.87.png", width = 25, height = 17, units = "cm")
#Ba/Ca
Iso.Ba.Ca <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Ba/Ca, fill = Ba/Ca), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Ba:Ca", colour = "Ba:Ca") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Ba.Ca
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Ba.Ca.png", width = 25, height = 17, units = "cm")
#Fe/Ca
Iso.Fe.Ca <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Fe/Ca, fill = Fe/Ca), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Fe:Ca", colour = "Fe:Ca") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Fe.Ca
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Fe.Ca.png", width = 25, height = 17, units = "cm")
#Mg/Ca
Iso.Mg.Ca <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Mg/Ca, fill = Mg/Ca), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Mg:Ca", colour = "Mg:Ca") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Mg.Ca
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Mg.Ca.png", width = 25, height = 17, units = "cm")
#Mn/Ca
Iso.Mn.Ca <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Mn/Ca, fill = Mn/Ca), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Mn:Ca", colour = "Mn:Ca") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Mn.Ca
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Mn.Ca.png", width = 25, height = 17, units = "cm")
#Sr/Ca
Iso.Sr.Ca <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Sr/Ca, fill = Sr/Ca), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Sr:Ca", colour = "Sr:Ca") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Sr.Ca
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Sr.Ca.png", width = 25, height = 17, units = "cm")
