plot11 + plot12 + plot_annotation(tag_levels = 'a') + ((plot_layout(guides = 'collect')) & theme(legend.position = 'bottom')
#Let's merge them all together
plot11 + plot12 + plot_annotation(tag_levels = 'a') + ((plot_layout(guides = 'collect')) & theme(legend.position = 'bottom')
#Let's merge them all together
plot11 + plot12 + plot_annotation(tag_levels = 'a') + (plot_layout(guides = 'collect')) & theme(legend.position = 'bottom')
#and let's save it for the manuscript :)
ggsave("Output/IsotopeRelationships.png", width = 20, height = 13, units = "cm")
#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
#------------------------------------- #
# Pre-processing the data for Figure 1 #
#--------------------------------------#
#Let's load in the data
setwd("~/GitHub/Water_Chemistry")
water <- read.csv("Input/Locations.csv")
head(water)
# Reorder plotting order
water$Reach <- factor(water$Reach, levels = c("Estuary - Lower Clarence", "Orara", "Mid - Clarence", "Mann - Nymboida", "Upper Clarence"))
# Load catchment shapefile:
catch <- st_read("Input/shapefile/MultiAttributeClarence.shp") # Use sf package (keep projection!)
head(catch)
catch[catch$LandCode == "f5k",]
catchrivers <- catch[catch$LandCode == "f5k",]
class(catchrivers)
catchrivers
catch[catch$LandCode == "f5b",]
lake <- catch[catch$LandCode == "f5b",]
class(lake)
lake
catch[catch$LandCode == "f5a",]
sriv <- catch[catch$LandCode == "f5a",]
class(sriv)
sriv
setwd("~/GitHub/Water_Chemistry")
element <- read.csv("Input/WaterChem.Results.csv")
element
#Lets clean up the data
#removes "na" columns
new_element <- element[-c(63, 68, 78), ]
new_element
#changes columns to numeric
i <- c(4:22)
new_element[ , i] <- apply(new_element[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
sapply(new_element, class)
#Now lets get the means for all our variables by reach
------------------------------------------------------
#Basic Water Chemistry
#Temperature (Mean & SD)
aggregate(new_element$Temperature, list(new_element$Reach), FUN=mean)
aggregate(new_element$Temperature, list(new_element$Reach), FUN=sd)
#pH (Mean & SD)
aggregate(new_element$pH, list(new_element$Reach), FUN=mean)
aggregate(new_element$pH, list(new_element$Reach), FUN=sd)
#DO % (Mean & SD)
aggregate(new_element$DO.., list(new_element$Reach), FUN=mean)
aggregate(new_element$DO.., list(new_element$Reach), FUN=sd)
#DO (mg/L) (Mean & SD)
aggregate(new_element$DO.mg.L, list(new_element$Reach), FUN=mean)
aggregate(new_element$DO.mg.L, list(new_element$Reach), FUN=sd)
#Conductivity (Mean & SD)
aggregate(new_element$Conductivity..mS.cm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Conductivity..mS.cm., list(new_element$Reach), FUN=sd)
#Turbidity (Mean & SD)
aggregate(new_element$Turbidity..NTU., list(new_element$Reach), FUN=mean)
aggregate(new_element$Turbidity..NTU., list(new_element$Reach), FUN=sd)
#Now for Elemental means & SDs
#Ba ppm (Mean & SD)
aggregate(new_element$Ba..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Ba..ppm., list(new_element$Reach), FUN=sd)
#Ca ppm (Mean & SD)
aggregate(new_element$Ca..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Ca..ppm., list(new_element$Reach), FUN=sd)
#Fe ppm (Mean & SD)
aggregate(new_element$Fe..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Fe..ppm., list(new_element$Reach), FUN=sd)
#Mn ppm (Mean & SD)
aggregate(new_element$Mn..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Mn..ppm., list(new_element$Reach), FUN=sd)
#Mg ppm (Mean & SD)
aggregate(new_element$Mg..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Mg..ppm., list(new_element$Reach), FUN=sd)
#Pb ppm (Mean & SD)
aggregate(new_element$Pb..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Pb..ppm., list(new_element$Reach), FUN=sd)
#Se ppm (Mean & SD)
aggregate(new_element$Se..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Se..ppm., list(new_element$Reach), FUN=sd)
#Sr ppm (Mean & SD)
aggregate(new_element$Sr..ppm., list(new_element$Reach), FUN=mean)
aggregate(new_element$Sr..ppm., list(new_element$Reach), FUN=sd)
#Ba/Ca ratio (Mean & SD)
aggregate(new_element$Ba.Ca, list(new_element$Reach), FUN=mean)
aggregate(new_element$Ba.Ca, list(new_element$Reach), FUN=sd)
#Sr/Ca ppm (Mean & SD)
aggregate(new_element$Sr.Ca, list(new_element$Reach), FUN=mean)
aggregate(new_element$Sr.Ca, list(new_element$Reach), FUN=sd)
#Sr 86/87 (Mean & SD)
aggregate(new_element$Sr87.86, list(new_element$Reach), FUN=mean)
aggregate(new_element$Sr87.86, list(new_element$Reach), FUN=sd)
#Temperature
sf_use_s2(FALSE)
Iso.Temp <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Temperature, fill = Temperature), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = c("#1252ED", "#12ED3F", "#EDAD12", "#Ed1224"),
values = c(0, 0.10, 0.20, 0.30, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)) +
scale_fill_gradientn(colours = c("#1252ED", "#12ED3F", "#EDAD12", "#ED1224"),
values = c(0, 0.10, 0.20, 0.30, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)) +
labs(x = "Longitude", y = "Latitude", fill = "Temperature", colour = "Temperature") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Temp
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Temp.png", width = 20, height = 13, units = "cm")
#pH
sf_use_s2(FALSE)
Iso.pH <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = pH, fill = pH), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = c("#1252ED", "#12ED3F", "#EDAD12", "#Ed1224"),
values = c(0, 0.10, 0.20, 0.30, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)) +
scale_fill_gradientn(colours = c("#1252ED", "#12ED3F", "#EDAD12", "#ED1224"),
values = c(0, 0.10, 0.20, 0.30, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)) +
labs(x = "Longitude", y = "Latitude", fill = "pH", colour = "pH") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.pH
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.pH.png", width = 20, height = 13, units = "cm")
#DO %
#ADD MORE COLOURS
sf_use_s2(FALSE)
Iso.DO.Perc <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = DO.., fill = DO..), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "DO..", colour = "DO..") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.DO.Perc
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.DO.png", width = 20, height = 13, units = "cm")
#DO(mg/L)
sf_use_s2(FALSE)
Iso.DO.mgl <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = DO.mg.L, fill = DO.mg.L), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "DO.mg.L", colour = "DO.mg.L") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.DO.mgl
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.DO.mg.png", width = 20, height = 13, units = "cm")
#Conductivity
sf_use_s2(FALSE)
Iso.Cond <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Conductivity..mS.cm., fill = Conductivity..mS.cm.), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Conductivity..mS.cm.", colour = "Conductivity..mS.cm.") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Cond
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Cond.png", width = 20, height = 13, units = "cm")
#Turbidity (NTU)
sf_use_s2(FALSE)
Iso.Turb <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = new_element, aes(x = Long, y = Lat, colour = Turbidity..NTU., fill = Turbidity..NTU.), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_colour_gradientn(colours = rainbow(10)) +
scale_fill_gradientn(colours = rainbow(10)) +
labs(x = "Longitude", y = "Latitude", fill = "Turbidity..NTU.", colour = "Turbidity..NTU.") +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
Iso.Turb
#and let's save it for the manuscript :)
ggsave("Output/Isoscape.Turb.png", width = 20, height = 13, units = "cm")
#Load up all the packages we need
library(rgdal)
library(raster)
library(ggplot2)
library(cmocean)
library(cowplot)
library(tidyverse)
library(patchwork)
library(sf)
library(ggsn)
library(plotrix)
library(dplyr)
#------------------------------------- #
# Pre-processing the data for Figure 1 #
#--------------------------------------#
#Let's load in the data
setwd("~/GitHub/Water_Chemistry")
water <- read.csv("Input/Locations.csv")
head(water)
# Reorder plotting order
water$Reach <- factor(water$Reach, levels = c("Estuary - Lower Clarence", "Orara", "Mid - Clarence", "Mann - Nymboida", "Upper Clarence"))
# Load catchment shapefile:
catch <- st_read("Input/shapefile/MultiAttributeClarence.shp") # Use sf package (keep projection!)
head(catch)
catch[catch$LandCode == "f5k",]
catchrivers <- catch[catch$LandCode == "f5k",]
class(catchrivers)
catchrivers
catch[catch$LandCode == "f5b",]
lake <- catch[catch$LandCode == "f5b",]
class(lake)
lake
catch[catch$LandCode == "f5a",]
sriv <- catch[catch$LandCode == "f5a",]
class(sriv)
sriv
#-------------------------------------------------------------#
#                   Creating Figure 1                         #
#-------------------------------------------------------------#
# Map water sampling locations in the Clarence - Figure 1A
sf_use_s2(FALSE)
plotA <- ggplot() + theme_bw() +
geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat, fill = Reach), size = 2.0, pch = 21, stroke = 0.2) +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = c(cmocean('phase')(6)[1:5])) +
scale_colour_manual(values = cmocean('thermal')(15)[1:5]) +
labs(x = "Longitude", y = "Latitude", fill = "Reach",
colour = "Reach") +
guides(fill = guide_legend(ncol = 1)) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3)
plotA
library(ozmaps) # create Australian map with clarence location
library(cowplot) # plot both maps on top of each other
#map of Australia
oz_states <- ozmaps::ozmap_states
oz_states
library(dplyr)
oz_states %>%
filter(NAME != "Other Territories") -> oz_mainland
m1 <- ggplot(oz_mainland) +
geom_sf(aes(fill = FALSE), lwd = 0.1,
show.legend = FALSE) +
scale_fill_manual(values = c("White"))
m1 #this makes the map
# Average Clarence coordinate
mean(spatial$Latitude)
mean(spatial$Longitude)
#Australia map with red rectangle around the Clarence catchment
m2 <- m1 + theme_void() +
theme(plot.background = element_rect(fill = 'white', colour = "black", size = 0.6, linetype = 'solid')) +
annotate("rect", xmin = 152.45 , xmax = 153.4 , ymin = -29.85 , ymax = -29.3 , fill = NA, color = "red")
m2 #this is the Australia map with a rectangle around the area of interest
# to merge the site map with the Australia map
m3 <- ggdraw() +
draw_plot(plotA) +
draw_plot(m2, x = 0.4315, y = 0.7655, width = 0.22, height = 0.22) + plot_annotation(plot_annotation(title = 'a'))
m3
#Let's load up the geology of the area
geo <- st_read("Input/shapefile/GeologicalUnits1M.shp", stringsAsFactors = TRUE) # Use sf package (keep projection!)
head(geo)
class(geo)
str(geo)
#we're going to map 3 different layers (Dominant_L, NSW_CODE and Age_Medial)
#Remember to change the name of the layer in all below (ie: NSW_CODE), as well and the the total colour #s (ie: 239 vs 38)
#First we need to find how many "level" are in each "layer"
class(geo$Province)
str(geo$Province)
levels(geo$Province)
unique(geo$Province)
#Now need to make it a factor & see how long it is
geo$PLOTSYMBOL<- as.factor(geo$Province)
summary(geo$Province)
length(levels(geo$Province))
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(27)[1:27]) +
scale_colour_manual(values = rainbow(27)[1:27]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 2), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(583)[1:583]) +
scale_colour_manual(values = rainbow(583)[1:583]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
#Let's load up the geology of the area
geo <- st_read("Input/shapefile/GeologicalUnits1M.shp", stringsAsFactors = TRUE) # Use sf package (keep projection!)
head(geo)
class(geo)
str(geo)
#First we need to find how many "level" are in each "layer"
class(geo$Province)
str(geo$Province)
levels(geo$Province)
unique(geo$Province)
View(geo)
head(geo)
class(geo)
str(geo)
#Let's load up the geology of the area
geo <- st_read("Input/shapefile/GeologicalUnits1M.shp", stringsAsFactors = TRUE) # Use sf package (keep projection!)
head(geo)
class(geo)
str(geo)
#we're going to map 3 different layers (Dominant_L, NSW_CODE and Age_Medial)
#Remember to change the name of the layer in all below (ie: NSW_CODE), as well and the the total colour #s (ie: 239 vs 38)
#First we need to find how many "level" are in each "layer"
class(geo$Province)
str(geo$Province)
levels(geo$Province)
unique(geo$Province)
#Now need to make it a factor & see how long it is
geo$Province<- as.factor(geo$Province)
summary(geo$Province)
length(levels(geo$Province))
geo <- st_read("Input/shapefile/GeologicalUnits1M.shp", stringsAsFactors = TRUE) # Use sf package (keep projection!)
head(geo)
class(geo)
str(geo)
#Let's load up the geology of the area
geo <- st_read("Input/shapefile/rock_units2.shp", stringsAsFactors = TRUE) # Use sf package (keep projection!)
head(geo)
class(geo)
str(geo)
#we're going to map 3 different layers (Dominant_L, NSW_CODE and Age_Medial)
#Remember to change the name of the layer in all below (ie: NSW_CODE), as well and the the total colour #s (ie: 239 vs 38)
#First we need to find how many "level" are in each "layer"
class(geo$Province)
str(geo$Province)
levels(geo$Province)
unique(geo$Province)
#Now need to make it a factor & see how long it is
geo$Province<- as.factor(geo$Province)
summary(geo$Province)
length(levels(geo$Province))
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(583)[1:583]) +
scale_colour_manual(values = rainbow(583)[1:583]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(5)[1:5]) +
scale_colour_manual(values = rainbow(5)[1:5]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
ggsave("Output/Map_clarence_Province.png", width = 20, height = 13, units = 'cm')
#Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(5)[1:5]) +
scale_colour_manual(values = rainbow(5)[1:5]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) & theme(legend.position = 'bottom') +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
Overlapping geology and sites (Province)
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(5)[1:5]) +
scale_colour_manual(values = rainbow(5)[1:5]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province"), theme(legend.position = 'bottom')) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
sf_use_s2(FALSE)
geoplot <- ggplot() + theme_bw() +
geom_sf(data = geo, aes(fill = as.factor(geo$Province)), alpha = 0.5, size = 0.3, show.legend = "fill") +
#geom_sf(data = catchrivers, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = lake, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
#geom_sf(data = sriv, fill = 'gray60', alpha = 0.4,  size = 0.07, colour = "black") +
geom_point(data = water, aes(x = Long, y = Lat), size = 1.5, pch = 21, stroke = 0.2, colour = 'black', fill = 'black') +
coord_sf(xlim = c(151.65, 153.5), ylim = c(-28.25, -30.5), expand = FALSE) +
scale_fill_manual(values = rainbow(5)[1:5]) +
scale_colour_manual(values = rainbow(5)[1:5]) +
labs(x = "Longitude", y = "Latitude",
colour = "Province", fill = "Province") +
guides(fill = guide_legend(ncol = 1), guide_legend(title = "Province")) +
ggsn::scalebar(x.min = 153, x.max = 153.3, y.min = -30.30, y.max = -30.35, transform = TRUE,
box.fill = c("black", "white"), box.color = "black", st.color = "black",
dist_unit = "km", dist = 10, st.dist = 1.0, st.size = 3, height = 0.30, border.size = 0.3) + plot_annotation(title = 'b')
geoplot
#Merging sampling locations (1a) and geology (1b)
m3 + geoplot + plot_annotation(subtitle = 'a') + (plot_layout(guides = 'collect')) & theme(legend.position = 'bottom'))
#Merging sampling locations (1a) and geology (1b)
m3 + geoplot + plot_annotation(subtitle = 'a') + (plot_layout(guides = 'collect')) & theme(legend.position = 'bottom')
m3 + geoplot + plot_annotation(subtitle = 'a') + (plot_layout(guides = 'collect'))
